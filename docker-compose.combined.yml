services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: ssr_dp_2025_db
    environment:
      POSTGRES_DB: ssr_dp_2025
      POSTGRES_USER: ssr_dp_2025_user
      POSTGRES_PASSWORD: supsersecret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - donation_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ssr_dp_2025_user -d ssr_dp_2025"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Combined Backend + Frontend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost/api/v1
    container_name: ssr_dp_2025_app
    environment:
      DATABASE_URL: postgresql://ssr_dp_2025_user:supsersecret@db:5432/ssr_dp_2025
      SECRET_KEY: your-secret-key-change-in-production
      JWT_SECRET_KEY: jwt-secret-key-change-in-production
      FLASK_ENV: production
      VITE_API_URL: http://localhost/api/v1
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - donation_network
    volumes:
      - ./backend:/app/backend
      - ./frontend:/app/frontend
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        cd /app/backend &&
        python wait_for_db.py &&
        echo 'Initializing database...' &&
        python init_db.py &&
        echo 'Adding users...' &&
        python add_multiple_users.py &&
        echo 'Running comprehensive verification...' &&
        python verify_setup.py &&
        echo 'Starting combined application...' &&
        /app/start.sh
      "

volumes:
  postgres_data:

networks:
  donation_network:
    driver: bridge
